@model FarmerBrothers.Models.BillingUploadReportModel

@using FarmerBrothers.Data;
@using Newtonsoft.Json;
@using Syncfusion.MVC.EJ;
@using Syncfusion.JavaScript;
<style>
    .e-grid .e-toolbar > .e-horizontal.e-ul {
        vertical-align: middle;
        float: left;
        height: auto;
    }

    a.disabled {
        pointer-events: none;
    }
</style>
<script type="text/javascript">
    var searchCriteria;
    function queryCellInfo(args)
    {
        if (args.column.field == "ToatlEventsByTech") {
            args.cell.className	+= " urlStyle";
        }
        if ( args.column.field == "BranchName" && args.data["BranchName"] == "Total Calls" )
            args.cell.className += " totalFieldStyle";
    }
    function SetSubmitOperation(operation)
    {
        $("#Operation").val(operation);
    }
    $(document).ready(function () {
        $('#ReportLink').css("color", "white");

        $("#billingFromDate").ejDatePicker({ value: new Date($("#billingFromDate").val()) });
        $("#billingToDate").ejDatePicker({ value: new Date($("#billingToDate").val()) });

        $("#TechID").change(function () {
            $.ajax({
            url: "@Url.Action("TechnicianByFamilyAff", "Reports")",
            data: { FamilyAff: $('#TechID option:selected').val() },
            success: function (Result) {
                $('#TechniciansId').empty()
                $.each(Result, function (key, value) {
                    $("#TechniciansId").append($("<option></option>").val(value.DealerId).html(value.CompanyName));
                });

            }

            })
        });


        $('#billingUploadResults').ejGrid({
            exportToExcelAction : '@Url.Action("BillingUploadReportExcelExport", "Reports")',
            toolbarSettings: { showToolbar: true, toolbarItems: [ej.Grid.ToolBarItems.ExcelExport] },
            allowPaging: true,
            isResponsive: true,
            enableResponsiveRow: true,
            allowSorting:true ,
            allowTextWrap: true,
            pageSettings: { pageSize: 25 },
            allowResizeToFit : true,
            queryCellInfo:"queryCellInfo",
            dataSource : @Html.Raw(Json.Encode(Model.SearchResults)),
            columns: [


                { field: "PricingParentID", headerText: "Parent Account Number" },
                { field: "CompanyName", headerText: "Company Name" },
                { field: "Address1", headerText: "Address1" },
                { field: "WorkorderCallstatus", headerText: "Call Status" },
                { field: "NoServiceRequired", headerText: "No Service Required" },
                { field: "SequenceNumber", headerText: "Overflow Line No" },
                { field: "CustomerID", headerText: "Ship To Number" },                
                { field: "RequestDate", headerText: "Request Date" },
                { field: "SecondItemNumber", headerText: "2nd Item Number" },
                { field: "Quantity", headerText: "Quantity Ordered" },
                { field: "DocTy", headerText: "Doc Ty" },
                { field: "TravelLaborTime", headerText: "Travel/Labor Hours" },
                { field: "Cost", headerText: "Cost Per Hour" },
                { field: "TotalInvoice", headerText: "Extended Price" },
                { field: "WorkorderID", headerText: "Reference" },
                { field: "TextLine", headerText: "Text Line" }
            ]
        });

        $("form").submit(function (e) {
            if (ValidateSearchCriteria() == true) {
                var frmValues = $("form").serialize();
                $.ajax({
                    type: "post",
                    url: "@Url.Action("SearchBillingUploadReport", "Reports")",
                    data: frmValues
                }).done(function( result ) {
                    var obj = $("#billingUploadResults").ejGrid("instance");
                    obj.dataSource(result.rows);
                });
            }
            $("#HiddenFromDate").val($("#billingFromDate").val());
            $("#HiddenToDate").val($("#billingToDate").val());
            $("#HiddenDealerId").val($("#TechID").val());
            $("#HiddenTechID").val($("#DealerId").val());
            $("#HiddenParentACC").val($("#ParentACC").val());
            $("#HiddenAccountNo").val($("#AccountNo").val());
            e.preventDefault();
        });

        if (!($('#billingFromDate').val() == ""
            && $('#billingToDate').val() == ""
        )) {
            $('form').submit();
        }

        ClearBillingReportSearchResults();
    });

    function ValidateSearchCriteria()
    {
        var valid = true;
        if ($('#billingFromDate').val() == ""
            || $('#billingToDate').val() == "")
        {
            AlertPopup("|Please Select StartDate and EndDate!");
            valid = false;
        }

        return valid;
    }

    function ClearBillingReportSearchResults() {billingToDate
        $('.form-control').val('');

        $.ajax({
            type: "post",
            url: "@Url.Action("ClearbillingUploadResults", "Reports")",
        }).done(function( result ) {
            var obj = $("#billingUploadResults").ejGrid("instance");
            obj.dataSource(result);

        });

        $( '#billingFromDate' ).val( '' );
        $( '#billingToDate' ).val( '' );
        $( '#TechID' ).val( 'All' );
        $( '#TechniciansId' ).val( '-1' );
        $( '#ParentACC' ).val( '0' );
        $( '#AccountNo' ).val( '0' );

        return false;
    }

</script>


@using (Html.BeginForm())
{
    <section class="container-fluid white-bg pad">
        <div class="row top-info">
            <div class="col-md-11">
                <b>Billing Report</b>
            </div>
            <div class="col-md-1">
                @Html.ActionLink("Back", "AllReports", "Reports", new { @IsBack = 1 }, new { @Class = "btn btn-primary" })
            </div>
        </div>

    </section>

    <section class="well">
        <div class="row top-info">
            <div class="customer-content margin-top">
                <div class="row customer clear-input">
                    <div class="col-md-12">
                        <div class="col-md-2">
                            <div class="form-group right-inner-addon">
                                Start Date :
                                @Html.TextBoxFor(c => c.BillingFromDate, new { @class = "form-control SearchPanelControl", @Id = "billingFromDate" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group right-inner-addon">
                                End Date :
                                @Html.TextBoxFor(c => c.BillingToDate, new { @class = "form-control SearchPanelControl", @Id = "billingToDate" })
                            </div>
                        </div>
                        @*<div class="col-md-2">
                            <div class="form-group right-inner-addon">
                                Account#:
                                @Html.TextBoxFor(c => c.AccountNo, new { @class = "form-control SearchPanelControl", @Id = "AccountNo" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group right-inner-addon">
                                Family Aff :
                                @Html.DropDownListFor(c => c.TechID, new SelectList(Model.FamilyAffs, "TechID", "TechName", "None"), new { @class = "form-control SearchPanelControl" })
                            </div>
                        </div>

                        <div class="col-md-2">
                            <div class="form-group right-inner-addon">
                                Technician :
                                @Html.DropDownListFor(t => t.DealerId, new SelectList(Model.Technicianlist, "DealerId", "CompanyName", "None"), new { @class = "form-control SearchPanelControl", @Id = "TechniciansId" })
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group right-inner-addon">
                                Parent Account#:
                                @Html.TextBoxFor(c => c.ParentACC, new { @class = "form-control SearchPanelControl", @Id = "ParentACC" })
                            </div>
                        </div>*@

                        <div class="col-md-2">
                            <div class="form-group right-inner-addon" style="top:1.3em;">
                                <button type="submit" class="btn btn-primary">Search</button>
                                <a onclick="ClearBillingReportSearchResults()" class="btn btn-orange">Clear</a>
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
    </section>
}

<section class="block margin-top">
    <div class="container-fluid">
        <div class="row top-info">
            <div class="col-xs-12 col-sm-4 col-md-3">
                <b>Search Results</b>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-12">
                <table id="billingUploadResults" class="display" cellspacing="0" width="100%"></table>
                @Html.HiddenFor(c => c.HiddenFromDate)
                @Html.HiddenFor(c => c.HiddenToDate)
                @Html.HiddenFor(c => c.HiddenDealerId)
                @Html.HiddenFor(c => c.HiddenTechID)
                @Html.HiddenFor(c => c.HiddenParentACC)
                @Html.HiddenFor(c => c.HiddenAccountNo)
            </div>
        </div>
    </div>
</section>